# bot/handlers/motion_handler.py
import asyncio
from telegram import Update
from telegram.ext import ContextTypes
from bot.config import ADMIN_ID
from rtsp_motion_detector import run_rtsp_detector

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏
MOTION_ENABLED = False
MOTION_TASK = None

def motion_enabled() -> bool:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–≤–∫–ª/–≤—ã–∫–ª)"""
    return MOTION_ENABLED

async def motion_on(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í–∫–ª—é—á–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –¥–≤–∏–∂–µ–Ω–∏—è"""
    global MOTION_ENABLED, MOTION_TASK

    user_id = update.effective_user.id
    if user_id != ADMIN_ID:
        return

    if MOTION_ENABLED:
        await update.message.reply_text("üìπ –î–µ—Ç–µ–∫—Ç–æ—Ä —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return

    MOTION_ENABLED = True
    MOTION_TASK = context.application.create_task(run_rtsp_detector(context.bot, motion_enabled))
    await update.message.reply_text("‚úÖ –î–µ—Ç–µ–∫—Ç–æ—Ä –¥–≤–∏–∂–µ–Ω–∏—è –≤–∫–ª—é—á—ë–Ω")

async def motion_off(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ã–∫–ª—é—á–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –¥–≤–∏–∂–µ–Ω–∏—è"""
    global MOTION_ENABLED, MOTION_TASK

    user_id = update.effective_user.id
    if user_id != ADMIN_ID:
        return

    if not MOTION_ENABLED:
        await update.message.reply_text("‚èπ –î–µ—Ç–µ–∫—Ç–æ—Ä –∏ —Ç–∞–∫ –≤—ã–∫–ª—é—á–µ–Ω")
        return

    MOTION_ENABLED = False
    if MOTION_TASK:
        MOTION_TASK.cancel()
        try:
            await MOTION_TASK
        except asyncio.CancelledError:
            pass
        MOTION_TASK = None

    await update.message.reply_text("‚èπ –î–µ—Ç–µ–∫—Ç–æ—Ä –¥–≤–∏–∂–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω")
